This program and the accompanying materials are made available under the
terms of the MIT license (X11 license) which accompanies this distribution.

Version 2.0.0 (in development):
  - Added native distributions for macOS and Windows. The distributions are
    self-contained and do not require a locally installed 'Java SE Platform'.
  - Added mouse support, besides the existing keyboard-based user interface,
    for selecting and moving figures.
  - Added support for en passant captures.
  - Added support for selecting a figure besides a queen when promoting pawns.
  - Added game history with algebraic notation as specified by FIDE. The history
    can be used to undo moves. To reset the game to a previous position, select
    a move using the up- and down-keys and press space. The game will be reset
    to the state resulting after executing the selected move. The tab-key is
    used to switch between chessboard and game history navigation.
  - Removed "Undo move"-entry of the "Game"-menu; the new game history can
    be used instead.
  - Added algebraic notation to the chessboard, marking its files and ranks.
  - Added release notes tab to "About pmChess"-window.
  - Added contact form to "About pmChess"-window which can be used to report
    bugs and give feedback. The form is also directly reachable via a new
    "Contact and feedback"-entry of the "Help"-menu.
  - Added taskbar icon and application logo.
  - Portable jar-file distribution now requires the 'Java SE 19 Platform'.

Version 1.0.0 (10 December 2017):
  - First public release on GitHub as portable jar-file (requires a
    locally installed 'Java SE 9.0.4 Platform').
  - Implements the official rules of FIDE (Fédération Internationale des
    Échecs) except for en passant moves and the following draw rules:
      1) Threefold repetition: The same position occurs three times with the
         same player to move.
      2) Fifty-moves rule: The last fifty successive moves made by both players
         contain no capture or pawn move.
      3) Insufficient material: Neither player has a theoretical possibility
         to checkmate the opponent.
  - Graphical user interface with chessboard, last move highlighting, status
    message, castling overview and keyboard input for figure selection and
    movement.
  - Menu-bar with support for new game configuration, movement undoing,
    about dialog and shortcuts. Supported are human vs. human or computer
    player games.
  - Computer players are implemented using a common min-max search with
    alpha-beta pruning in combination with a simple scoring-heuristic for
    figure-constellations; the search depth are four half-moves. The following
    implementation constraints are satisfied:
      1) The min-max search is heap memory allocation free. There exist no
         dynamic memory allocations throughout a computer player's turn, for
         which reason computer players have fixed memory requirements. Each
         game situation, including the history of previous and possible moves,
         fits in 32kB.
      2) The min-max implementation is recursive.
